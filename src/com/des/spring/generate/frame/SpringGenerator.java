/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.des.spring.generate.frame;

import com.des.generate.GenerateFile;
import com.des.paperbase.ManageData;
import com.des.schemadb.SchemaDB;
import com.des.session.Session;
import com.des.spring.generate.dialog.LoadData;
import com.des.spring.generate.dialog.SetupProject;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import jscantag.Jscantag;
import org.json.simple.parser.ParseException;

/**
 *
 * @author Surachai
 */
public class SpringGenerator extends javax.swing.JFrame {

    private Project projectPanel;
    private JSpringQuery SpringQuery;
    private JSpringGenerate Generate;
    private SetupProject setup;
    private LoadData LoadDATA;
    private JSpringPage SpringPage;
    private Map<String, Object> map;
    private ManageData DB;
    private GenerateFile g;
    private Jscantag scan;

    /**
     * Creates new form SpringGenerator
     */

    public void setMap(Map<String, Object> map) {
        this.map = map;
    }

    public Map<String, Object> getMap() {
        return this.map;
    }

    public SpringGenerator() {
        initComponents();

        DB = new ManageData("DB");
        scan = new Jscantag();
        try {
            DB.Create("project");
        } catch (IOException ex) {
            Logger.getLogger(SpringGenerator.class.getName()).log(Level.SEVERE, null, ex);
        }

        map = new HashMap<String, Object>();
        // init page
        projectPanel = new Project();
        SpringQuery = new JSpringQuery();
        SpringPage = new JSpringPage();

        SpringQuery.setVisible(false);
        projectPanel.setVisible(true);
        SpringPage.setVisible(false);
        //init spring generator
        Generate = new JSpringGenerate();
        //init panel
        setup = new SetupProject();
        LoadDATA = new LoadData();

        //setup load list from DB
        setupLoadList();
        getContentPane().add(projectPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
        pack();

        g = new GenerateFile();
    }

    public void setupLoadList() {
        LoadDATA.clearTableLoad();
        DefaultTableModel model = (DefaultTableModel) LoadDATA.getTableLoad().getModel();
        if (DB == null) {
            System.out.println("DB is null point");
        } else {
            try {
                List<Map<String, Object>> ListLoad = DB.select("project", null, "OR");
                for (int i = 0; i < ListLoad.size(); i++) {
                    System.out.println("row List");
                    Object[] row = new Object[1];
                    row[0] = ListLoad.get(i).get("projectname");
                    model.addRow(row);
                }
            } catch (ParseException ex) {
                Logger.getLogger(SpringGenerator.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        newProject = new javax.swing.JMenuItem();
        saveProject = new javax.swing.JMenuItem();
        loadProject = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jMenu3.setText("File");

        newProject.setText("new");
        newProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProjectActionPerformed(evt);
            }
        });
        jMenu3.add(newProject);

        saveProject.setText("save");
        saveProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveProjectActionPerformed(evt);
            }
        });
        jMenu3.add(saveProject);

        loadProject.setText("load");
        loadProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadProjectActionPerformed(evt);
            }
        });
        jMenu3.add(loadProject);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("page");

        jMenuItem1.setText("main");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuItem2.setText("query");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuItem3.setText("new page");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuItem4.setText("manage");
        jMenu4.add(jMenuItem4);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Session session = Session.Getinstance();
        SchemaDB DB = session.getSchema();
        SpringQuery.setDB(DB);
        SetupPage(SpringQuery);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        SetupPage(projectPanel);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void newProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProjectActionPerformed
        // TODO add your handling code here:
        setup.setVisible(true);
        setup.setMainFrame(projectPanel);
    }//GEN-LAST:event_newProjectActionPerformed

    private void saveProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveProjectActionPerformed
        Session sessionMap = Session.Getinstance();
        Map<String, Object> parameter = sessionMap.getMap();
        try {
            if (parameter.isEmpty()) {
                JOptionPane.showMessageDialog(this, "no data in session");
            } else {
                DB.insert("project", parameter);
                setupLoadList();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_saveProjectActionPerformed

    private void loadProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadProjectActionPerformed
        // TODO add your handling code here:
        LoadDATA.setVisible(true);
        LoadDATA.setMainFrame(projectPanel);
        LoadDATA.setM(DB);
    }//GEN-LAST:event_loadProjectActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        SetupPage(SpringPage);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    public void SetupPage(Object page) {
        if (page instanceof JSpringQuery) {
            getContentPane().add((JSpringQuery) page, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
            SpringQuery.setVisible(true);
            projectPanel.setVisible(false);
            SpringPage.setVisible(false);
            pack();
        } else if (page instanceof JSpringPage) {
            getContentPane().add((JSpringPage) page, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
            SpringQuery.setVisible(false);
            projectPanel.setVisible(false);
            SpringPage.setVisible(true);
            initJSpringPage();
            pack();
        } else if (page instanceof Project) {
            getContentPane().add((Project) page, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
            SpringQuery.setVisible(false);
            projectPanel.setVisible(true);
            SpringPage.setVisible(false);
            pack();
        }
    }

    public void initJSpringPage() {
        Session sessionMap = Session.Getinstance();
        Map<String, Object> parameter = sessionMap.getMap();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        DefaultComboBoxModel Templatemodel = new DefaultComboBoxModel();
        model.addElement("other");
        if (parameter.get("projectpath") != null) {
            //set ref name
            List<String> listfile = scan.getListIDFromSpringBeans(parameter.get("projectpath").toString()+"/web/WEB-INF/"+parameter.get("projectname").toString()+"-query.xml");
            if (listfile != null) {      
                for(int i = 0; i < listfile.size(); i++) {
                    model.addElement(listfile.get(i));
                }
                if(listfile.size() != 0) {
                    SpringPage.setAJaxRefNameList(model);
                }
            }
                  
            List<String> listTemplate = scan.getListNameTemplateFromTile(parameter.get("projectpath").toString()+"/web/WEB-INF/tiles/tiles-definitions.xml");
            if(listTemplate != null){
                for(int i = 0; i < listTemplate.size(); i++) {
                    Templatemodel.addElement(listTemplate.get(i));
                }
                if(listTemplate.size() != 0) {
                    SpringPage.setAJaxExtendList(Templatemodel);
                }
            }

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpringGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpringGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpringGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpringGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SpringGenerator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem loadProject;
    private javax.swing.JMenuItem newProject;
    private javax.swing.JMenuItem saveProject;
    // End of variables declaration//GEN-END:variables

}
